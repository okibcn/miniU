# Copyright (c) 2023 okibcn
# This is free software, licensed under the GNU General Public License v3.0
# See /LICENSE for more information.
# https://github.com/okibcn/nano-for-windows
# Description: Builds nano for Windows

name: "Build miniU"
on:
  workflow_dispatch:
      inputs:
        debug_enabled:
          description: 'Debug session enabled'
          required: false
          default: false
          type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: "⏬ Checkout repository"
      uses: actions/checkout@v3
    - name: "📝 Generate miniU-0"
      run: |
        ##----------------   GENERATE miniU-0   ---------------##
        #
        docker run -dit --name miniu ubuntu bash
        docker export miniu > miniU-raw.tar


    - name: "📝 Generate miniU-docker"
      run: |
        ##----------------   GENERATE miniU-docker  ---------------##
        #
        alias EXE='docker exec miniu'
        EXE apt update -y
        EXE apt install -y wget apt-utils nano
        EXE wget -q https://raw.githubusercontent.com/docker/docker-install/master/install.sh
        EXE chmod +x install.sh
        EXE /docker install.sh
        EXE sh -c "echo \"[boot]\" >> /etc/wsl.conf"
        EXE sh -c "echo \"command = service docker start\" >> /etc/wsl.conf"
        EXE apt clean
        docker stop miniu -t 0
        docker export miniu > miniU-docker.tar


    - name: "📝 Generate miniU"
      run: |
        ##----------------   GENERATE miniU   ---------------##
        #

        docker container prune -f
        docker run -dit --name miniu ubuntu bash
        git clone https://github.com/StoneyDSP/ubento.git
        cd ubento
        docker cp etc miniu:/
        docker cp root miniu:/


    - name: "🔧 Prepare debug session"
      if: github.event.inputs.debug_enabled == 'true'
      run: |
        # install zsh
        sudo apt install zsh zsh-syntax-highlighting

        # oh-my-posh
        sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
        sudo chmod +x /usr/local/bin/oh-my-posh

        # oh-my-posh Themes
        mkdir ~/.poshthemes
        wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/themes.zip -O ~/.poshthemes/themes.zip
        unzip ~/.poshthemes/themes.zip -d ~/.poshthemes
        chmod u+rw ~/.poshthemes/*.omp.*
        rm ~/.poshthemes/themes.zip

        # setting rc files
        echo "eval \"\$(oh-my-posh init \$(oh-my-posh get shell))\"" >> ~/.bashrc
        echo "eval \"\$(oh-my-posh init \$(oh-my-posh get shell))\"" >> ~/.zshrc

        cp .nanorc.linux ~/.nanorc
        cp Github_Linux/profile.sh ~/.bashrc
        echo "source ~/.bashrc" >> ~/.bash_profile
        cp Github_Linux/profile.sh ~/.zshrc




    - name: "🐞 Debug session"
      uses: mxschmitt/action-tmate@v3
      if: github.event.inputs.debug_enabled == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ## More info at https://til.simonwillison.net/github-actions/debug-tmate
        ##           or https://github.com/mxschmitt/action-tmate



    - name: "👍 Upload Artifact"
      uses: actions/upload-artifact@v3
      with:
        name: Latest_Ubi
        path: |
          images.7z
